[[PrefaceTypographicConventions]]

=== Typographic Conventions

The following table shows the typographic conventions that are used in this guide.

// https://github.com/oreillymedia/orm_book_samples/blob/master/asciidoc_only/preface.asciidoc

// AsciiDoc allows alternative markup for some styles, specifially
// 'single quotes' and _underlines_ for italics and +plus signs+ and
// `backticks` for monospaces.
// Asciidoctor’s modern mode is more strict, and only allows _underline_
// italics and `backtick` monospaces.
// http://asciidoctor.org/docs/migration/

.Typographic Conventions
[options="header",cols="1,3,3"]
|===============
|Style|Description|Example
|_Italic_             |File names, folder names, and extensions |_C:\Development\wireshark_.
|`Monospace`          |Commands, flags, and environment variables|CMake’s `-G` option.
|**`Bold Monospace`** |Commands that should be run by the user|Run **`cmake -G Ninja ..`**.
|btn:[Button]         |Dialog and window buttons |Press btn:[Launch] to go to the Moon.
|kbd:[Key]            |Keyboard shortcut |Press kbd:[Ctrl+Down] to move to the next packet.
|menu:Menu[]          |Menu item |Select menu:Go[Next Packet] to move to the next packet.
|===============

==== Admonitions

Important and notable items are marked as follows:

[WARNING]
.This is a warning
====
You should pay attention to a warning, otherwise data loss might occur.
====

[NOTE]
.This is a note
====
A note will point you to common mistakes and things that might not be obvious.
====

[TIP]
.This is a tip
====
Tips are helpful for your everyday work using Wireshark.
====

==== Shell Prompt and Source Code Examples

.Bourne shell, normal user
----
$ # This is a comment
$ git config --global log.abbrevcommit true
----

.Bourne shell, root user
----
# # This is a comment
# ninja install
----

.Command Prompt (cmd.exe)
----
>rem This is a comment
>cd C:\Development
----

.PowerShell
----
PS$># This is a comment
PS$>choco list -l
----

.C Source Code
----
#include "config.h"

/* This method dissects foos */
static int
dissect_foo_message(tvbuff_t *tvb, packet_info *pinfo _U_, proto_tree *tree _U_, void *data _U_)
{
    /* TODO: implement your dissecting code */
    return tvb_captured_length(tvb);
}
----
